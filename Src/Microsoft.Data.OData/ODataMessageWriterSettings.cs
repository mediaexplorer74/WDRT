using System;
using System.Xml;

namespace Microsoft.Data.OData
{
	// Token: 0x02000298 RID: 664
	public sealed class ODataMessageWriterSettings : ODataMessageWriterSettingsBase
	{
		// Token: 0x0600165E RID: 5726 RVA: 0x00051BD7 File Offset: 0x0004FDD7
		public ODataMessageWriterSettings()
		{
			this.writerBehavior = ODataWriterBehavior.DefaultBehavior;
		}

		// Token: 0x0600165F RID: 5727 RVA: 0x00051BEC File Offset: 0x0004FDEC
		public ODataMessageWriterSettings(ODataMessageWriterSettings other)
			: base(other)
		{
			ExceptionUtils.CheckArgumentNotNull<ODataMessageWriterSettings>(other, "other");
			this.acceptCharSets = other.acceptCharSets;
			this.acceptMediaTypes = other.acceptMediaTypes;
			this.BaseUri = other.BaseUri;
			this.DisableMessageStreamDisposal = other.DisableMessageStreamDisposal;
			this.format = other.format;
			this.useFormat = other.useFormat;
			this.Version = other.Version;
			this.metadataDocumentUri = other.metadataDocumentUri;
			this.atomFormatStartEntryXmlCustomizationCallback = other.atomFormatStartEntryXmlCustomizationCallback;
			this.atomFormatEndEntryXmlCustomizationCallback = other.atomFormatEndEntryXmlCustomizationCallback;
			this.JsonPCallback = other.JsonPCallback;
			this.shouldIncludeAnnotation = other.shouldIncludeAnnotation;
			this.AutoComputePayloadMetadataInJson = other.AutoComputePayloadMetadataInJson;
			this.AutoGeneratedUrlsShouldPutKeyValueInDedicatedSegment = other.AutoGeneratedUrlsShouldPutKeyValueInDedicatedSegment;
			this.alwaysUseDefaultXmlNamespaceForRootElement = other.alwaysUseDefaultXmlNamespaceForRootElement;
			this.UndeclaredPropertyBehaviorKinds = other.UndeclaredPropertyBehaviorKinds;
			this.writerBehavior = other.writerBehavior;
		}

		// Token: 0x1700047D RID: 1149
		// (get) Token: 0x06001660 RID: 5728 RVA: 0x00051CD7 File Offset: 0x0004FED7
		// (set) Token: 0x06001661 RID: 5729 RVA: 0x00051CDF File Offset: 0x0004FEDF
		public ODataVersion? Version { get; set; }

		// Token: 0x1700047E RID: 1150
		// (get) Token: 0x06001662 RID: 5730 RVA: 0x00051CE8 File Offset: 0x0004FEE8
		// (set) Token: 0x06001663 RID: 5731 RVA: 0x00051CF0 File Offset: 0x0004FEF0
		public Uri BaseUri { get; set; }

		// Token: 0x1700047F RID: 1151
		// (get) Token: 0x06001664 RID: 5732 RVA: 0x00051CF9 File Offset: 0x0004FEF9
		// (set) Token: 0x06001665 RID: 5733 RVA: 0x00051D01 File Offset: 0x0004FF01
		public ODataUndeclaredPropertyBehaviorKinds UndeclaredPropertyBehaviorKinds { get; set; }

		// Token: 0x17000480 RID: 1152
		// (get) Token: 0x06001666 RID: 5734 RVA: 0x00051D0A File Offset: 0x0004FF0A
		// (set) Token: 0x06001667 RID: 5735 RVA: 0x00051D12 File Offset: 0x0004FF12
		public bool DisableMessageStreamDisposal { get; set; }

		// Token: 0x17000481 RID: 1153
		// (get) Token: 0x06001668 RID: 5736 RVA: 0x00051D1B File Offset: 0x0004FF1B
		// (set) Token: 0x06001669 RID: 5737 RVA: 0x00051D23 File Offset: 0x0004FF23
		public string JsonPCallback { get; set; }

		// Token: 0x17000482 RID: 1154
		// (get) Token: 0x0600166A RID: 5738 RVA: 0x00051D2C File Offset: 0x0004FF2C
		// (set) Token: 0x0600166B RID: 5739 RVA: 0x00051D34 File Offset: 0x0004FF34
		public bool AutoComputePayloadMetadataInJson { get; set; }

		// Token: 0x17000483 RID: 1155
		// (get) Token: 0x0600166C RID: 5740 RVA: 0x00051D3D File Offset: 0x0004FF3D
		// (set) Token: 0x0600166D RID: 5741 RVA: 0x00051D45 File Offset: 0x0004FF45
		public bool? AutoGeneratedUrlsShouldPutKeyValueInDedicatedSegment { get; set; }

		// Token: 0x17000484 RID: 1156
		// (get) Token: 0x0600166E RID: 5742 RVA: 0x00051D4E File Offset: 0x0004FF4E
		internal bool AlwaysUseDefaultXmlNamespaceForRootElement
		{
			get
			{
				return this.alwaysUseDefaultXmlNamespaceForRootElement;
			}
		}

		// Token: 0x17000485 RID: 1157
		// (get) Token: 0x0600166F RID: 5743 RVA: 0x00051D56 File Offset: 0x0004FF56
		internal string AcceptableMediaTypes
		{
			get
			{
				return this.acceptMediaTypes;
			}
		}

		// Token: 0x17000486 RID: 1158
		// (get) Token: 0x06001670 RID: 5744 RVA: 0x00051D5E File Offset: 0x0004FF5E
		internal string AcceptableCharsets
		{
			get
			{
				return this.acceptCharSets;
			}
		}

		// Token: 0x17000487 RID: 1159
		// (get) Token: 0x06001671 RID: 5745 RVA: 0x00051D66 File Offset: 0x0004FF66
		internal ODataWriterBehavior WriterBehavior
		{
			get
			{
				return this.writerBehavior;
			}
		}

		// Token: 0x17000488 RID: 1160
		// (get) Token: 0x06001672 RID: 5746 RVA: 0x00051D6E File Offset: 0x0004FF6E
		internal ODataFormat Format
		{
			get
			{
				return this.format;
			}
		}

		// Token: 0x17000489 RID: 1161
		// (get) Token: 0x06001673 RID: 5747 RVA: 0x00051D76 File Offset: 0x0004FF76
		internal bool? UseFormat
		{
			get
			{
				return this.useFormat;
			}
		}

		// Token: 0x1700048A RID: 1162
		// (get) Token: 0x06001674 RID: 5748 RVA: 0x00051D7E File Offset: 0x0004FF7E
		internal Func<ODataEntry, XmlWriter, XmlWriter> AtomStartEntryXmlCustomizationCallback
		{
			get
			{
				return this.atomFormatStartEntryXmlCustomizationCallback;
			}
		}

		// Token: 0x1700048B RID: 1163
		// (get) Token: 0x06001675 RID: 5749 RVA: 0x00051D86 File Offset: 0x0004FF86
		internal Action<ODataEntry, XmlWriter, XmlWriter> AtomEndEntryXmlCustomizationCallback
		{
			get
			{
				return this.atomFormatEndEntryXmlCustomizationCallback;
			}
		}

		// Token: 0x1700048C RID: 1164
		// (get) Token: 0x06001676 RID: 5750 RVA: 0x00051D8E File Offset: 0x0004FF8E
		internal ODataMetadataDocumentUri MetadataDocumentUri
		{
			get
			{
				return this.metadataDocumentUri;
			}
		}

		// Token: 0x1700048D RID: 1165
		// (get) Token: 0x06001677 RID: 5751 RVA: 0x00051D96 File Offset: 0x0004FF96
		// (set) Token: 0x06001678 RID: 5752 RVA: 0x00051D9E File Offset: 0x0004FF9E
		internal Func<string, bool> ShouldIncludeAnnotation
		{
			get
			{
				return this.shouldIncludeAnnotation;
			}
			set
			{
				this.shouldIncludeAnnotation = value;
			}
		}

		// Token: 0x06001679 RID: 5753 RVA: 0x00051DA7 File Offset: 0x0004FFA7
		public void SetContentType(string acceptableMediaTypes, string acceptableCharSets)
		{
			this.acceptMediaTypes = acceptableMediaTypes;
			this.acceptCharSets = acceptableCharSets;
			this.format = null;
			this.useFormat = new bool?(false);
		}

		// Token: 0x0600167A RID: 5754 RVA: 0x00051DCA File Offset: 0x0004FFCA
		public void SetContentType(ODataFormat payloadFormat)
		{
			this.acceptCharSets = null;
			this.acceptMediaTypes = null;
			this.format = payloadFormat;
			this.useFormat = new bool?(true);
		}

		// Token: 0x0600167B RID: 5755 RVA: 0x00051DED File Offset: 0x0004FFED
		public void SetAtomEntryXmlCustomization(Func<ODataEntry, XmlWriter, XmlWriter> atomStartEntryXmlCustomizationCallback, Action<ODataEntry, XmlWriter, XmlWriter> atomEndEntryXmlCustomizationCallback)
		{
			if ((atomStartEntryXmlCustomizationCallback == null && atomEndEntryXmlCustomizationCallback != null) || (atomStartEntryXmlCustomizationCallback != null && atomEndEntryXmlCustomizationCallback == null))
			{
				throw new ODataException(Strings.ODataMessageWriterSettings_MessageWriterSettingsXmlCustomizationCallbacksMustBeSpecifiedBoth);
			}
			this.atomFormatStartEntryXmlCustomizationCallback = atomStartEntryXmlCustomizationCallback;
			this.atomFormatEndEntryXmlCustomizationCallback = atomEndEntryXmlCustomizationCallback;
		}

		// Token: 0x0600167C RID: 5756 RVA: 0x00051E14 File Offset: 0x00050014
		public void EnableDefaultBehavior()
		{
			this.SetAtomEntryXmlCustomization(null, null);
			this.writerBehavior = ODataWriterBehavior.DefaultBehavior;
		}

		// Token: 0x0600167D RID: 5757 RVA: 0x00051E29 File Offset: 0x00050029
		public void EnableWcfDataServicesServerBehavior(bool usesV1Provider)
		{
			this.SetAtomEntryXmlCustomization(null, null);
			this.writerBehavior = ODataWriterBehavior.CreateWcfDataServicesServerBehavior(usesV1Provider);
		}

		// Token: 0x0600167E RID: 5758 RVA: 0x00051E3F File Offset: 0x0005003F
		public void EnableWcfDataServicesServerBehavior(bool usesV1Provider, bool alwaysUseDefaultXmlNamespaceForRootElement)
		{
			this.EnableWcfDataServicesServerBehavior(usesV1Provider);
			this.alwaysUseDefaultXmlNamespaceForRootElement = alwaysUseDefaultXmlNamespaceForRootElement;
		}

		// Token: 0x0600167F RID: 5759 RVA: 0x00051E4F File Offset: 0x0005004F
		public void EnableWcfDataServicesClientBehavior(Func<ODataEntry, XmlWriter, XmlWriter> startEntryXmlCustomizationCallback, Action<ODataEntry, XmlWriter, XmlWriter> endEntryXmlCustomizationCallback, string odataNamespace, string typeScheme)
		{
			ExceptionUtils.CheckArgumentNotNull<string>(odataNamespace, "odataNamespace");
			ExceptionUtils.CheckArgumentNotNull<string>(typeScheme, "typeScheme");
			this.SetAtomEntryXmlCustomization(startEntryXmlCustomizationCallback, endEntryXmlCustomizationCallback);
			this.writerBehavior = ODataWriterBehavior.CreateWcfDataServicesClientBehavior(odataNamespace, typeScheme);
		}

		// Token: 0x06001680 RID: 5760 RVA: 0x00051E7E File Offset: 0x0005007E
		public void SetMetadataDocumentUri(Uri value)
		{
			this.metadataDocumentUri = ((value == null) ? null : new ODataMetadataDocumentUri(value));
		}

		// Token: 0x06001681 RID: 5761 RVA: 0x00051E98 File Offset: 0x00050098
		public void SetMetadataDocumentUri(Uri value, string selectClause)
		{
			this.metadataDocumentUri = new ODataMetadataDocumentUri(value)
			{
				SelectClause = selectClause
			};
		}

		// Token: 0x06001682 RID: 5762 RVA: 0x00051EBA File Offset: 0x000500BA
		public bool ContainUndeclaredPropertyBehavior(ODataUndeclaredPropertyBehaviorKinds undeclaredPropertyBehaviorKinds)
		{
			if (undeclaredPropertyBehaviorKinds == ODataUndeclaredPropertyBehaviorKinds.None)
			{
				return this.UndeclaredPropertyBehaviorKinds == ODataUndeclaredPropertyBehaviorKinds.None;
			}
			return this.UndeclaredPropertyBehaviorKinds.HasFlag(undeclaredPropertyBehaviorKinds);
		}

		// Token: 0x06001683 RID: 5763 RVA: 0x00051EDF File Offset: 0x000500DF
		internal bool HasJsonPaddingFunction()
		{
			return !string.IsNullOrEmpty(this.JsonPCallback);
		}

		// Token: 0x06001684 RID: 5764 RVA: 0x00051EF0 File Offset: 0x000500F0
		internal bool ShouldSkipAnnotation(string annotationName)
		{
			return this.Version.Value < ODataVersion.V3 || (this.ShouldIncludeAnnotation != null && !this.ShouldIncludeAnnotation(annotationName));
		}

		// Token: 0x040008D1 RID: 2257
		private string acceptCharSets;

		// Token: 0x040008D2 RID: 2258
		private string acceptMediaTypes;

		// Token: 0x040008D3 RID: 2259
		private ODataFormat format;

		// Token: 0x040008D4 RID: 2260
		private bool? useFormat;

		// Token: 0x040008D5 RID: 2261
		private Func<ODataEntry, XmlWriter, XmlWriter> atomFormatStartEntryXmlCustomizationCallback;

		// Token: 0x040008D6 RID: 2262
		private Action<ODataEntry, XmlWriter, XmlWriter> atomFormatEndEntryXmlCustomizationCallback;

		// Token: 0x040008D7 RID: 2263
		private ODataWriterBehavior writerBehavior;

		// Token: 0x040008D8 RID: 2264
		private ODataMetadataDocumentUri metadataDocumentUri;

		// Token: 0x040008D9 RID: 2265
		private Func<string, bool> shouldIncludeAnnotation;

		// Token: 0x040008DA RID: 2266
		private bool alwaysUseDefaultXmlNamespaceForRootElement;
	}
}
