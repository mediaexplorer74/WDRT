<StackPanel
	x:Class="Microsoft.WindowsDeviceRecoveryTool.States.Settings.NetworkView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:localization="clr-namespace:Microsoft.WindowsDeviceRecoveryTool.Localization;assembly=Microsoft.WindowsDeviceRecoveryTool.Localization" xmlns:textBoxes="clr-namespace:Microsoft.WindowsDeviceRecoveryTool.Controls.TextBoxes" xmlns:validation="clr-namespace:Microsoft.WindowsDeviceRecoveryTool.Controls.TextBoxes.Validation" xmlns:threading="clr-namespace:System.Windows.Threading;assembly=WindowsBase" xmlns:controls="clr-namespace:Microsoft.WindowsDeviceRecoveryTool.Controls"
	KeyboardNavigation.TabNavigation="Continue"
	FrameworkElement.Width="250"
	FrameworkElement.HorizontalAlignment="Left" xmlns:settings="clr-namespace:Microsoft.WindowsDeviceRecoveryTool.States.Settings"
	Loaded="NetworkView_OnLoaded"
	Unloaded="NetworkView_OnUnloaded">
	<FrameworkElement.Resources>
		<ResourceDictionary>
			<threading:DispatcherTimer
				x:Key="CapsLockTimer"
				Interval="0:0:0.1"
				Tick="CapsLockTimer_OnTick" />
		</ResourceDictionary>
	</FrameworkElement.Resources>
	<TextBlock
		FrameworkElement.Style="{DynamicResource BasicTextStyle}"
		FrameworkElement.Margin="0,0,0,5"
		TextBlock.Text="{localization:Localization UseProxyServer}" />
	<StackPanel
		Orientation="Horizontal">
		<TextBlock
			FrameworkElement.Style="{DynamicResource BasicTextStyle}"
			TextBlock.FontWeight="Bold"
			FrameworkElement.VerticalAlignment="Center"
			FrameworkElement.MinWidth="100"
			FrameworkElement.Margin="0,0,20,0"
			TextBlock.Text="{Binding UseManualProxy, Converter='{StaticResource BoolToOffOnConverter}'}" />
		<controls:InvokableToggleButton
			x:Name="UseManualProxyCheckBox"
			FrameworkElement.Style="{DynamicResource ToggleSwitchStyle}"
			IsChecked="{Binding UseManualProxy, Mode=TwoWay}"
			AutomationProperties.Name="{localization:Localization UseProxyServer}" />
	</StackPanel>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition
				ColumnDefinition.Width="Auto" />
			<ColumnDefinition
				ColumnDefinition.Width="*" />
		</Grid.ColumnDefinitions>
		<StackPanel
			Orientation="Vertical"
			Grid.Column="0">
			<TextBlock
				FrameworkElement.HorizontalAlignment="Left"
				FrameworkElement.VerticalAlignment="Center"
				FrameworkElement.Style="{DynamicResource BasicTextStyle}"
				FrameworkElement.Margin="0,10,0,5"
				TextBlock.Text="{localization:Localization AddressForm}" />
			<AdornerDecorator>
				<validation:ValidatedTextBox
					x:Name="AddressBox"
					FrameworkElement.Style="{DynamicResource {x:Type TextBox}}"
					TextWrapping="NoWrap"
					FrameworkElement.HorizontalAlignment="Left"
					FrameworkElement.Width="165"
					UIElement.IsEnabled="{Binding IsChecked, ElementName=UseManualProxyCheckBox}"
					AutomationProperties.Name="{localization:Localization AddressForm}">
					<TextBox.Text>
						<Binding
							Path="ProxyAddress"
							UpdateSourceTrigger="PropertyChanged">
							<Binding.ValidationRules>
								<textBoxes:ProxyAddressValidationRule />
							</Binding.ValidationRules>
						</Binding>
					</TextBox.Text>
				</validation:ValidatedTextBox>
			</AdornerDecorator>
		</StackPanel>
		<StackPanel
			Orientation="Vertical"
			FrameworkElement.Margin="10,0,0,0"
			Grid.Column="1">
			<TextBlock
				FrameworkElement.HorizontalAlignment="Left"
				FrameworkElement.Style="{DynamicResource BasicTextStyle}"
				FrameworkElement.Margin="0,10,0,5"
				TextBlock.Text="{localization:Localization PortForm}" />
			<textBoxes:NumericTextBox
				x:Name="PortBox"
				MinValue="0"
				MaxValue="65535"
				FrameworkElement.HorizontalAlignment="Stretch"
				FrameworkElement.Style="{DynamicResource {x:Type TextBox}}"
				UIElement.IsEnabled="{Binding IsChecked, ElementName=UseManualProxyCheckBox}"
				TextBox.Text="{Binding ProxyPort, Mode=TwoWay}"
				AutomationProperties.Name="{localization:Localization PortForm}" />
		</StackPanel>
	</Grid>
	<TextBlock
		FrameworkElement.HorizontalAlignment="Left"
		FrameworkElement.VerticalAlignment="Center"
		FrameworkElement.Style="{DynamicResource BasicTextStyle}"
		FrameworkElement.Margin="0,10,0,5"
		TextBlock.Text="{localization:Localization UserNameForm}" />
	<TextBox
		FrameworkElement.Name="UserNameBox"
		FrameworkElement.HorizontalAlignment="Stretch"
		TextWrapping="NoWrap"
		TextBox.Text="{Binding ProxyUsername, Mode=TwoWay}"
		UIElement.IsEnabled="{Binding IsChecked, ElementName=UseManualProxyCheckBox}"
		AutomationProperties.Name="{localization:Localization UserNameForm}"
		x:Name="UserNameBox" />
	<TextBlock
		FrameworkElement.HorizontalAlignment="Left"
		FrameworkElement.VerticalAlignment="Top"
		FrameworkElement.Style="{DynamicResource BasicTextStyle}"
		FrameworkElement.Margin="0,10,0,5"
		TextBlock.Text="{localization:Localization PasswordForm}" />
	<PasswordBox
		Name="PasswordBox"
		textBoxes:PasswordHelper.Attach="True"
		UIElement.IsEnabled="{Binding IsChecked, ElementName=UseManualProxyCheckBox}"
		textBoxes:PasswordHelper.Password="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
		AutomationProperties.Name="{localization:Localization PasswordForm}" />
	<TextBlock
		Name="CapsLockTextBlock"
		FrameworkElement.HorizontalAlignment="Center"
		FrameworkElement.Margin="0,5,0,0"
		UIElement.IsEnabled="False"
		TextBlock.Text="{localization:Localization CapsLockIsOn}">
		<FrameworkElement.Style>
			<Style
				TargetType="{x:Type TextBlock}">
				<Style.Triggers>
					<Trigger
						Property="UIElement.IsEnabled"
						Value="False">
						<TriggerBase.EnterActions>
							<BeginStoryboard>
								<Storyboard>
									<DoubleAnimation
										Duration="0:0:0.2"
										From="1"
										To="0"
										Storyboard.TargetProperty="(UIElement.Opacity)" />
								</Storyboard>
							</BeginStoryboard>
						</TriggerBase.EnterActions>
						<TriggerBase.ExitActions>
							<BeginStoryboard>
								<Storyboard>
									<DoubleAnimation
										Duration="0:0:0.2"
										From="0"
										To="1"
										Storyboard.TargetProperty="(UIElement.Opacity)" />
								</Storyboard>
							</BeginStoryboard>
						</TriggerBase.ExitActions>
					</Trigger>
				</Style.Triggers>
			</Style>
		</FrameworkElement.Style>
	</TextBlock>
</StackPanel>
