using System;
using System.ComponentModel;
using System.Drawing;
using System.Drawing.Imaging;
using System.Drawing.Text;
using System.Security.Permissions;
using System.Windows.Forms.Layout;

namespace System.Windows.Forms
{
	/// <summary>Handles the painting functionality for <see cref="T:System.Windows.Forms.ToolStrip" /> objects.</summary>
	// Token: 0x020003F7 RID: 1015
	public abstract class ToolStripRenderer
	{
		/// <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ToolStripRenderer" /> class.</summary>
		// Token: 0x060045F6 RID: 17910 RVA: 0x00126D91 File Offset: 0x00124F91
		protected ToolStripRenderer()
		{
		}

		// Token: 0x060045F7 RID: 17911 RVA: 0x00126DA4 File Offset: 0x00124FA4
		internal ToolStripRenderer(bool isAutoGenerated)
		{
			this.isAutoGenerated = isAutoGenerated;
		}

		// Token: 0x17001135 RID: 4405
		// (get) Token: 0x060045F8 RID: 17912 RVA: 0x00126DC0 File Offset: 0x00124FC0
		private static ColorMatrix DisabledImageColorMatrix
		{
			get
			{
				if (ToolStripRenderer.disabledImageColorMatrix == null)
				{
					float[][] array = new float[5][];
					array[0] = new float[] { 0.2125f, 0.2125f, 0.2125f, 0f, 0f };
					array[1] = new float[] { 0.2577f, 0.2577f, 0.2577f, 0f, 0f };
					array[2] = new float[] { 0.0361f, 0.0361f, 0.0361f, 0f, 0f };
					float[][] array2 = array;
					int num = 3;
					float[] array3 = new float[5];
					array3[3] = 1f;
					array2[num] = array3;
					array[4] = new float[] { 0.38f, 0.38f, 0.38f, 0f, 1f };
					float[][] array4 = new float[5][];
					float[][] array5 = array4;
					int num2 = 0;
					float[] array6 = new float[5];
					array6[0] = 1f;
					array5[num2] = array6;
					float[][] array7 = array4;
					int num3 = 1;
					float[] array8 = new float[5];
					array8[1] = 1f;
					array7[num3] = array8;
					float[][] array9 = array4;
					int num4 = 2;
					float[] array10 = new float[5];
					array10[2] = 1f;
					array9[num4] = array10;
					float[][] array11 = array4;
					int num5 = 3;
					float[] array12 = new float[5];
					array12[3] = 0.7f;
					array11[num5] = array12;
					array4[4] = new float[5];
					ToolStripRenderer.disabledImageColorMatrix = ControlPaint.MultiplyColorMatrix(array4, array);
				}
				return ToolStripRenderer.disabledImageColorMatrix;
			}
		}

		// Token: 0x17001136 RID: 4406
		// (get) Token: 0x060045F9 RID: 17913 RVA: 0x00126EA4 File Offset: 0x001250A4
		private EventHandlerList Events
		{
			get
			{
				if (this.events == null)
				{
					this.events = new EventHandlerList();
				}
				return this.events;
			}
		}

		// Token: 0x17001137 RID: 4407
		// (get) Token: 0x060045FA RID: 17914 RVA: 0x00126EBF File Offset: 0x001250BF
		internal bool IsAutoGenerated
		{
			get
			{
				return this.isAutoGenerated;
			}
		}

		// Token: 0x17001138 RID: 4408
		// (get) Token: 0x060045FB RID: 17915 RVA: 0x00015C90 File Offset: 0x00013E90
		internal virtual ToolStripRenderer RendererOverride
		{
			get
			{
				return null;
			}
		}

		/// <summary>Occurs when an arrow on a <see cref="T:System.Windows.Forms.ToolStripItem" /> is rendered.</summary>
		// Token: 0x14000373 RID: 883
		// (add) Token: 0x060045FC RID: 17916 RVA: 0x00126EC7 File Offset: 0x001250C7
		// (remove) Token: 0x060045FD RID: 17917 RVA: 0x00126ED5 File Offset: 0x001250D5
		public event ToolStripArrowRenderEventHandler RenderArrow
		{
			add
			{
				this.AddHandler(ToolStripRenderer.EventRenderArrow, value);
			}
			remove
			{
				this.RemoveHandler(ToolStripRenderer.EventRenderArrow, value);
			}
		}

		/// <summary>Occurs when the background for a <see cref="T:System.Windows.Forms.ToolStrip" /> is rendered.</summary>
		// Token: 0x14000374 RID: 884
		// (add) Token: 0x060045FE RID: 17918 RVA: 0x00126EE3 File Offset: 0x001250E3
		// (remove) Token: 0x060045FF RID: 17919 RVA: 0x00126EF1 File Offset: 0x001250F1
		public event ToolStripRenderEventHandler RenderToolStripBackground
		{
			add
			{
				this.AddHandler(ToolStripRenderer.EventRenderToolStripBackground, value);
			}
			remove
			{
				this.RemoveHandler(ToolStripRenderer.EventRenderToolStripBackground, value);
			}
		}

		/// <summary>Draws the background of a <see cref="T:System.Windows.Forms.ToolStripPanel" />.</summary>
		// Token: 0x14000375 RID: 885
		// (add) Token: 0x06004600 RID: 17920 RVA: 0x00126EFF File Offset: 0x001250FF
		// (remove) Token: 0x06004601 RID: 17921 RVA: 0x00126F0D File Offset: 0x0012510D
		public event ToolStripPanelRenderEventHandler RenderToolStripPanelBackground
		{
			add
			{
				this.AddHandler(ToolStripRenderer.EventRenderToolStripPanelBackground, value);
			}
			remove
			{
				this.RemoveHandler(ToolStripRenderer.EventRenderToolStripPanelBackground, value);
			}
		}

		/// <summary>Draws the background of a <see cref="T:System.Windows.Forms.ToolStripContentPanel" />.</summary>
		// Token: 0x14000376 RID: 886
		// (add) Token: 0x06004602 RID: 17922 RVA: 0x00126F1B File Offset: 0x0012511B
		// (remove) Token: 0x06004603 RID: 17923 RVA: 0x00126F29 File Offset: 0x00125129
		public event ToolStripContentPanelRenderEventHandler RenderToolStripContentPanelBackground
		{
			add
			{
				this.AddHandler(ToolStripRenderer.EventRenderToolStripContentPanelBackground, value);
			}
			remove
			{
				this.RemoveHandler(ToolStripRenderer.EventRenderToolStripContentPanelBackground, value);
			}
		}

		/// <summary>Occurs when the border for a <see cref="T:System.Windows.Forms.ToolStrip" /> is rendered.</summary>
		// Token: 0x14000377 RID: 887
		// (add) Token: 0x06004604 RID: 17924 RVA: 0x00126F37 File Offset: 0x00125137
		// (remove) Token: 0x06004605 RID: 17925 RVA: 0x00126F45 File Offset: 0x00125145
		public event ToolStripRenderEventHandler RenderToolStripBorder
		{
			add
			{
				this.AddHandler(ToolStripRenderer.EventRenderBorder, value);
			}
			remove
			{
				this.RemoveHandler(ToolStripRenderer.EventRenderBorder, value);
			}
		}

		/// <summary>Occurs when the background for a <see cref="T:System.Windows.Forms.ToolStripButton" /> is rendered</summary>
		// Token: 0x14000378 RID: 888
		// (add) Token: 0x06004606 RID: 17926 RVA: 0x00126F53 File Offset: 0x00125153
		// (remove) Token: 0x06004607 RID: 17927 RVA: 0x00126F61 File Offset: 0x00125161
		public event ToolStripItemRenderEventHandler RenderButtonBackground
		{
			add
			{
				this.AddHandler(ToolStripRenderer.EventRenderButtonBackground, value);
			}
			remove
			{
				this.RemoveHandler(ToolStripRenderer.EventRenderButtonBackground, value);
			}
		}

		/// <summary>Occurs when the background for a <see cref="T:System.Windows.Forms.ToolStripDropDownButton" /> is rendered.</summary>
		// Token: 0x14000379 RID: 889
		// (add) Token: 0x06004608 RID: 17928 RVA: 0x00126F6F File Offset: 0x0012516F
		// (remove) Token: 0x06004609 RID: 17929 RVA: 0x00126F7D File Offset: 0x0012517D
		public event ToolStripItemRenderEventHandler RenderDropDownButtonBackground
		{
			add
			{
				this.AddHandler(ToolStripRenderer.EventRenderDropDownButtonBackground, value);
			}
			remove
			{
				this.RemoveHandler(ToolStripRenderer.EventRenderDropDownButtonBackground, value);
			}
		}

		/// <summary>Occurs when the background for an overflow button is rendered.</summary>
		// Token: 0x1400037A RID: 890
		// (add) Token: 0x0600460A RID: 17930 RVA: 0x00126F8B File Offset: 0x0012518B
		// (remove) Token: 0x0600460B RID: 17931 RVA: 0x00126F99 File Offset: 0x00125199
		public event ToolStripItemRenderEventHandler RenderOverflowButtonBackground
		{
			add
			{
				this.AddHandler(ToolStripRenderer.EventRenderOverflowButtonBackground, value);
			}
			remove
			{
				this.RemoveHandler(ToolStripRenderer.EventRenderOverflowButtonBackground, value);
			}
		}

		/// <summary>Occurs when the move handle for a <see cref="T:System.Windows.Forms.ToolStrip" /> is rendered.</summary>
		// Token: 0x1400037B RID: 891
		// (add) Token: 0x0600460C RID: 17932 RVA: 0x00126FA7 File Offset: 0x001251A7
		// (remove) Token: 0x0600460D RID: 17933 RVA: 0x00126FB5 File Offset: 0x001251B5
		public event ToolStripGripRenderEventHandler RenderGrip
		{
			add
			{
				this.AddHandler(ToolStripRenderer.EventRenderGrip, value);
			}
			remove
			{
				this.RemoveHandler(ToolStripRenderer.EventRenderGrip, value);
			}
		}

		/// <summary>Occurs when the background for a <see cref="T:System.Windows.Forms.ToolStripItem" /> is rendered.</summary>
		// Token: 0x1400037C RID: 892
		// (add) Token: 0x0600460E RID: 17934 RVA: 0x00126FC3 File Offset: 0x001251C3
		// (remove) Token: 0x0600460F RID: 17935 RVA: 0x00126FD1 File Offset: 0x001251D1
		public event ToolStripItemRenderEventHandler RenderItemBackground
		{
			add
			{
				this.AddHandler(ToolStripRenderer.EventRenderItemBackground, value);
			}
			remove
			{
				this.RemoveHandler(ToolStripRenderer.EventRenderItemBackground, value);
			}
		}

		/// <summary>Occurs when the image for a <see cref="T:System.Windows.Forms.ToolStripItem" /> is rendered.</summary>
		// Token: 0x1400037D RID: 893
		// (add) Token: 0x06004610 RID: 17936 RVA: 0x00126FDF File Offset: 0x001251DF
		// (remove) Token: 0x06004611 RID: 17937 RVA: 0x00126FED File Offset: 0x001251ED
		public event ToolStripItemImageRenderEventHandler RenderItemImage
		{
			add
			{
				this.AddHandler(ToolStripRenderer.EventRenderItemImage, value);
			}
			remove
			{
				this.RemoveHandler(ToolStripRenderer.EventRenderItemImage, value);
			}
		}

		/// <summary>Occurs when the image for a selected <see cref="T:System.Windows.Forms.ToolStripItem" /> is rendered.</summary>
		// Token: 0x1400037E RID: 894
		// (add) Token: 0x06004612 RID: 17938 RVA: 0x00126FFB File Offset: 0x001251FB
		// (remove) Token: 0x06004613 RID: 17939 RVA: 0x00127009 File Offset: 0x00125209
		public event ToolStripItemImageRenderEventHandler RenderItemCheck
		{
			add
			{
				this.AddHandler(ToolStripRenderer.EventRenderItemCheck, value);
			}
			remove
			{
				this.RemoveHandler(ToolStripRenderer.EventRenderItemCheck, value);
			}
		}

		/// <summary>Occurs when the text for a <see cref="T:System.Windows.Forms.ToolStripItem" /> is rendered.</summary>
		// Token: 0x1400037F RID: 895
		// (add) Token: 0x06004614 RID: 17940 RVA: 0x00127017 File Offset: 0x00125217
		// (remove) Token: 0x06004615 RID: 17941 RVA: 0x00127025 File Offset: 0x00125225
		public event ToolStripItemTextRenderEventHandler RenderItemText
		{
			add
			{
				this.AddHandler(ToolStripRenderer.EventRenderItemText, value);
			}
			remove
			{
				this.RemoveHandler(ToolStripRenderer.EventRenderItemText, value);
			}
		}

		/// <summary>Draws the margin between an image and its container.</summary>
		// Token: 0x14000380 RID: 896
		// (add) Token: 0x06004616 RID: 17942 RVA: 0x00127033 File Offset: 0x00125233
		// (remove) Token: 0x06004617 RID: 17943 RVA: 0x00127041 File Offset: 0x00125241
		public event ToolStripRenderEventHandler RenderImageMargin
		{
			add
			{
				this.AddHandler(ToolStripRenderer.EventRenderImageMargin, value);
			}
			remove
			{
				this.RemoveHandler(ToolStripRenderer.EventRenderImageMargin, value);
			}
		}

		/// <summary>Occurs when the background for a <see cref="T:System.Windows.Forms.ToolStripLabel" /> is rendered.</summary>
		// Token: 0x14000381 RID: 897
		// (add) Token: 0x06004618 RID: 17944 RVA: 0x0012704F File Offset: 0x0012524F
		// (remove) Token: 0x06004619 RID: 17945 RVA: 0x0012705D File Offset: 0x0012525D
		public event ToolStripItemRenderEventHandler RenderLabelBackground
		{
			add
			{
				this.AddHandler(ToolStripRenderer.EventRenderLabelBackground, value);
			}
			remove
			{
				this.RemoveHandler(ToolStripRenderer.EventRenderLabelBackground, value);
			}
		}

		/// <summary>Occurs when the background for a <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> is rendered.</summary>
		// Token: 0x14000382 RID: 898
		// (add) Token: 0x0600461A RID: 17946 RVA: 0x0012706B File Offset: 0x0012526B
		// (remove) Token: 0x0600461B RID: 17947 RVA: 0x00127079 File Offset: 0x00125279
		public event ToolStripItemRenderEventHandler RenderMenuItemBackground
		{
			add
			{
				this.AddHandler(ToolStripRenderer.EventRenderMenuItemBackground, value);
			}
			remove
			{
				this.RemoveHandler(ToolStripRenderer.EventRenderMenuItemBackground, value);
			}
		}

		/// <summary>Draws the background of a <see cref="T:System.Windows.Forms.ToolStripStatusLabel" />.</summary>
		// Token: 0x14000383 RID: 899
		// (add) Token: 0x0600461C RID: 17948 RVA: 0x00127087 File Offset: 0x00125287
		// (remove) Token: 0x0600461D RID: 17949 RVA: 0x00127095 File Offset: 0x00125295
		public event ToolStripItemRenderEventHandler RenderToolStripStatusLabelBackground
		{
			add
			{
				this.AddHandler(ToolStripRenderer.EventRenderToolStripStatusLabelBackground, value);
			}
			remove
			{
				this.RemoveHandler(ToolStripRenderer.EventRenderToolStripStatusLabelBackground, value);
			}
		}

		/// <summary>Occurs when the display style changes.</summary>
		// Token: 0x14000384 RID: 900
		// (add) Token: 0x0600461E RID: 17950 RVA: 0x001270A3 File Offset: 0x001252A3
		// (remove) Token: 0x0600461F RID: 17951 RVA: 0x001270B1 File Offset: 0x001252B1
		public event ToolStripRenderEventHandler RenderStatusStripSizingGrip
		{
			add
			{
				this.AddHandler(ToolStripRenderer.EventRenderStatusStripSizingGrip, value);
			}
			remove
			{
				this.RemoveHandler(ToolStripRenderer.EventRenderStatusStripSizingGrip, value);
			}
		}

		/// <summary>Occurs when the background for a <see cref="T:System.Windows.Forms.ToolStripSplitButton" /> is rendered.</summary>
		// Token: 0x14000385 RID: 901
		// (add) Token: 0x06004620 RID: 17952 RVA: 0x001270BF File Offset: 0x001252BF
		// (remove) Token: 0x06004621 RID: 17953 RVA: 0x001270CD File Offset: 0x001252CD
		public event ToolStripItemRenderEventHandler RenderSplitButtonBackground
		{
			add
			{
				this.AddHandler(ToolStripRenderer.EventRenderSplitButtonBackground, value);
			}
			remove
			{
				this.RemoveHandler(ToolStripRenderer.EventRenderSplitButtonBackground, value);
			}
		}

		/// <summary>Occurs when a <see cref="T:System.Windows.Forms.ToolStripSeparator" /> is rendered.</summary>
		// Token: 0x14000386 RID: 902
		// (add) Token: 0x06004622 RID: 17954 RVA: 0x001270DB File Offset: 0x001252DB
		// (remove) Token: 0x06004623 RID: 17955 RVA: 0x001270E9 File Offset: 0x001252E9
		public event ToolStripSeparatorRenderEventHandler RenderSeparator
		{
			add
			{
				this.AddHandler(ToolStripRenderer.EventRenderSeparator, value);
			}
			remove
			{
				this.RemoveHandler(ToolStripRenderer.EventRenderSeparator, value);
			}
		}

		// Token: 0x06004624 RID: 17956 RVA: 0x001270F7 File Offset: 0x001252F7
		[UIPermission(SecurityAction.Demand, Window = UIPermissionWindow.AllWindows)]
		private void AddHandler(object key, Delegate value)
		{
			this.Events.AddHandler(key, value);
		}

		// Token: 0x06004625 RID: 17957 RVA: 0x00127106 File Offset: 0x00125306
		[UIPermission(SecurityAction.Demand, Window = UIPermissionWindow.AllWindows)]
		private void RemoveHandler(object key, Delegate value)
		{
			this.Events.RemoveHandler(key, value);
		}

		/// <summary>Creates a gray-scale copy of a given image.</summary>
		/// <param name="normalImage">The image to be copied.</param>
		/// <returns>An <see cref="T:System.Drawing.Image" /> that is a copy of the given image, but with a gray-scale color matrix.</returns>
		// Token: 0x06004626 RID: 17958 RVA: 0x00127115 File Offset: 0x00125315
		public static Image CreateDisabledImage(Image normalImage)
		{
			return ToolStripRenderer.CreateDisabledImage(normalImage, null);
		}

		/// <summary>Draws an arrow on a <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripArrowRenderEventArgs" /> that contains data to draw the arrow.</param>
		// Token: 0x06004627 RID: 17959 RVA: 0x00127120 File Offset: 0x00125320
		public void DrawArrow(ToolStripArrowRenderEventArgs e)
		{
			this.OnRenderArrow(e);
			ToolStripArrowRenderEventHandler toolStripArrowRenderEventHandler = this.Events[ToolStripRenderer.EventRenderArrow] as ToolStripArrowRenderEventHandler;
			if (toolStripArrowRenderEventHandler != null)
			{
				toolStripArrowRenderEventHandler(this, e);
			}
		}

		/// <summary>Draws the background for a <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripRenderEventArgs" /> that contains the data to draw the background for the <see cref="T:System.Windows.Forms.ToolStrip" />.</param>
		// Token: 0x06004628 RID: 17960 RVA: 0x00127158 File Offset: 0x00125358
		public void DrawToolStripBackground(ToolStripRenderEventArgs e)
		{
			this.OnRenderToolStripBackground(e);
			ToolStripRenderEventHandler toolStripRenderEventHandler = this.Events[ToolStripRenderer.EventRenderToolStripBackground] as ToolStripRenderEventHandler;
			if (toolStripRenderEventHandler != null)
			{
				toolStripRenderEventHandler(this, e);
			}
		}

		/// <summary>Draws a move handle on a <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripGripRenderEventArgs" /> that contains the data to draw the move handle.</param>
		// Token: 0x06004629 RID: 17961 RVA: 0x00127190 File Offset: 0x00125390
		public void DrawGrip(ToolStripGripRenderEventArgs e)
		{
			this.OnRenderGrip(e);
			ToolStripGripRenderEventHandler toolStripGripRenderEventHandler = this.Events[ToolStripRenderer.EventRenderGrip] as ToolStripGripRenderEventHandler;
			if (toolStripGripRenderEventHandler != null)
			{
				toolStripGripRenderEventHandler(this, e);
			}
		}

		/// <summary>Draws the background for a <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemRenderEventArgs" /> that contains the data to draw the background of the item.</param>
		// Token: 0x0600462A RID: 17962 RVA: 0x001271C8 File Offset: 0x001253C8
		public void DrawItemBackground(ToolStripItemRenderEventArgs e)
		{
			this.OnRenderItemBackground(e);
			ToolStripItemRenderEventHandler toolStripItemRenderEventHandler = this.Events[ToolStripRenderer.EventRenderItemBackground] as ToolStripItemRenderEventHandler;
			if (toolStripItemRenderEventHandler != null)
			{
				toolStripItemRenderEventHandler(this, e);
			}
		}

		/// <summary>Draws the space around an image on a <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripRenderEventArgs" /> that contains the data to draw the space around the image.</param>
		// Token: 0x0600462B RID: 17963 RVA: 0x00127200 File Offset: 0x00125400
		public void DrawImageMargin(ToolStripRenderEventArgs e)
		{
			this.OnRenderImageMargin(e);
			ToolStripRenderEventHandler toolStripRenderEventHandler = this.Events[ToolStripRenderer.EventRenderImageMargin] as ToolStripRenderEventHandler;
			if (toolStripRenderEventHandler != null)
			{
				toolStripRenderEventHandler(this, e);
			}
		}

		/// <summary>Draws the background for a <see cref="T:System.Windows.Forms.ToolStripLabel" />.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemRenderEventArgs" /> that contains the data to draw the background for the label.</param>
		// Token: 0x0600462C RID: 17964 RVA: 0x00127238 File Offset: 0x00125438
		public void DrawLabelBackground(ToolStripItemRenderEventArgs e)
		{
			this.OnRenderLabelBackground(e);
			ToolStripItemRenderEventHandler toolStripItemRenderEventHandler = this.Events[ToolStripRenderer.EventRenderLabelBackground] as ToolStripItemRenderEventHandler;
			if (toolStripItemRenderEventHandler != null)
			{
				toolStripItemRenderEventHandler(this, e);
			}
		}

		/// <summary>Draws the background for a <see cref="T:System.Windows.Forms.ToolStripButton" />.</summary>
		/// <param name="e">The <see cref="T:System.Windows.Forms.ToolStripItemRenderEventArgs" /> that contains data to draw the button's background.</param>
		// Token: 0x0600462D RID: 17965 RVA: 0x00127270 File Offset: 0x00125470
		public void DrawButtonBackground(ToolStripItemRenderEventArgs e)
		{
			this.OnRenderButtonBackground(e);
			ToolStripItemRenderEventHandler toolStripItemRenderEventHandler = this.Events[ToolStripRenderer.EventRenderButtonBackground] as ToolStripItemRenderEventHandler;
			if (toolStripItemRenderEventHandler != null)
			{
				toolStripItemRenderEventHandler(this, e);
			}
		}

		/// <summary>Draws the border for a <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripRenderEventArgs" /> that contains the data to draw the border for the <see cref="T:System.Windows.Forms.ToolStrip" />.</param>
		// Token: 0x0600462E RID: 17966 RVA: 0x001272A8 File Offset: 0x001254A8
		public void DrawToolStripBorder(ToolStripRenderEventArgs e)
		{
			this.OnRenderToolStripBorder(e);
			ToolStripRenderEventHandler toolStripRenderEventHandler = this.Events[ToolStripRenderer.EventRenderBorder] as ToolStripRenderEventHandler;
			if (toolStripRenderEventHandler != null)
			{
				toolStripRenderEventHandler(this, e);
			}
		}

		/// <summary>Draws the background for a <see cref="T:System.Windows.Forms.ToolStripDropDownButton" />.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemRenderEventArgs" /> that contains the data to draw the drop-down button's background.</param>
		// Token: 0x0600462F RID: 17967 RVA: 0x001272E0 File Offset: 0x001254E0
		public void DrawDropDownButtonBackground(ToolStripItemRenderEventArgs e)
		{
			this.OnRenderDropDownButtonBackground(e);
			ToolStripItemRenderEventHandler toolStripItemRenderEventHandler = this.Events[ToolStripRenderer.EventRenderDropDownButtonBackground] as ToolStripItemRenderEventHandler;
			if (toolStripItemRenderEventHandler != null)
			{
				toolStripItemRenderEventHandler(this, e);
			}
		}

		/// <summary>Draws the background for an overflow button.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x06004630 RID: 17968 RVA: 0x00127318 File Offset: 0x00125518
		public void DrawOverflowButtonBackground(ToolStripItemRenderEventArgs e)
		{
			this.OnRenderOverflowButtonBackground(e);
			ToolStripItemRenderEventHandler toolStripItemRenderEventHandler = this.Events[ToolStripRenderer.EventRenderOverflowButtonBackground] as ToolStripItemRenderEventHandler;
			if (toolStripItemRenderEventHandler != null)
			{
				toolStripItemRenderEventHandler(this, e);
			}
		}

		/// <summary>Draws an image on a <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemImageRenderEventArgs" /> that contains the data to draw the image.</param>
		// Token: 0x06004631 RID: 17969 RVA: 0x00127350 File Offset: 0x00125550
		public void DrawItemImage(ToolStripItemImageRenderEventArgs e)
		{
			this.OnRenderItemImage(e);
			ToolStripItemImageRenderEventHandler toolStripItemImageRenderEventHandler = this.Events[ToolStripRenderer.EventRenderItemImage] as ToolStripItemImageRenderEventHandler;
			if (toolStripItemImageRenderEventHandler != null)
			{
				toolStripItemImageRenderEventHandler(this, e);
			}
		}

		/// <summary>Draws an image on a <see cref="T:System.Windows.Forms.ToolStripItem" /> that indicates the item is in a selected state.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemImageRenderEventArgs" /> that contains the data to draw the selected image.</param>
		// Token: 0x06004632 RID: 17970 RVA: 0x00127388 File Offset: 0x00125588
		public void DrawItemCheck(ToolStripItemImageRenderEventArgs e)
		{
			this.OnRenderItemCheck(e);
			ToolStripItemImageRenderEventHandler toolStripItemImageRenderEventHandler = this.Events[ToolStripRenderer.EventRenderItemCheck] as ToolStripItemImageRenderEventHandler;
			if (toolStripItemImageRenderEventHandler != null)
			{
				toolStripItemImageRenderEventHandler(this, e);
			}
		}

		/// <summary>Draws text on a <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemTextRenderEventArgs" /> that contains the data to draw the text.</param>
		// Token: 0x06004633 RID: 17971 RVA: 0x001273C0 File Offset: 0x001255C0
		public void DrawItemText(ToolStripItemTextRenderEventArgs e)
		{
			this.OnRenderItemText(e);
			ToolStripItemTextRenderEventHandler toolStripItemTextRenderEventHandler = this.Events[ToolStripRenderer.EventRenderItemText] as ToolStripItemTextRenderEventHandler;
			if (toolStripItemTextRenderEventHandler != null)
			{
				toolStripItemTextRenderEventHandler(this, e);
			}
		}

		/// <summary>Draws the background for a <see cref="T:System.Windows.Forms.ToolStripMenuItem" />.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemRenderEventArgs" /> that contains the data to draw the background for the menu item.</param>
		// Token: 0x06004634 RID: 17972 RVA: 0x001273F8 File Offset: 0x001255F8
		public void DrawMenuItemBackground(ToolStripItemRenderEventArgs e)
		{
			this.OnRenderMenuItemBackground(e);
			ToolStripItemRenderEventHandler toolStripItemRenderEventHandler = this.Events[ToolStripRenderer.EventRenderMenuItemBackground] as ToolStripItemRenderEventHandler;
			if (toolStripItemRenderEventHandler != null)
			{
				toolStripItemRenderEventHandler(this, e);
			}
		}

		/// <summary>Draws a <see cref="T:System.Windows.Forms.ToolStripSplitButton" />.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x06004635 RID: 17973 RVA: 0x00127430 File Offset: 0x00125630
		public void DrawSplitButton(ToolStripItemRenderEventArgs e)
		{
			this.OnRenderSplitButtonBackground(e);
			ToolStripItemRenderEventHandler toolStripItemRenderEventHandler = this.Events[ToolStripRenderer.EventRenderSplitButtonBackground] as ToolStripItemRenderEventHandler;
			if (toolStripItemRenderEventHandler != null)
			{
				toolStripItemRenderEventHandler(this, e);
			}
		}

		/// <summary>Draws the background of the <see cref="T:System.Windows.Forms.ToolStripStatusLabel" />.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x06004636 RID: 17974 RVA: 0x00127468 File Offset: 0x00125668
		public void DrawToolStripStatusLabelBackground(ToolStripItemRenderEventArgs e)
		{
			this.OnRenderToolStripStatusLabelBackground(e);
			ToolStripItemRenderEventHandler toolStripItemRenderEventHandler = this.Events[ToolStripRenderer.EventRenderToolStripStatusLabelBackground] as ToolStripItemRenderEventHandler;
			if (toolStripItemRenderEventHandler != null)
			{
				toolStripItemRenderEventHandler(this, e);
			}
		}

		/// <summary>Draws a sizing grip.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x06004637 RID: 17975 RVA: 0x001274A0 File Offset: 0x001256A0
		public void DrawStatusStripSizingGrip(ToolStripRenderEventArgs e)
		{
			this.OnRenderStatusStripSizingGrip(e);
			ToolStripRenderEventHandler toolStripRenderEventHandler = this.Events[ToolStripRenderer.EventRenderStatusStripSizingGrip] as ToolStripRenderEventHandler;
			if (toolStripRenderEventHandler != null)
			{
				toolStripRenderEventHandler(this, e);
			}
		}

		/// <summary>Draws a <see cref="T:System.Windows.Forms.ToolStripSeparator" />.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripSeparatorRenderEventArgs" /> that contains the data to draw the <see cref="T:System.Windows.Forms.ToolStripSeparator" />.</param>
		// Token: 0x06004638 RID: 17976 RVA: 0x001274D8 File Offset: 0x001256D8
		public void DrawSeparator(ToolStripSeparatorRenderEventArgs e)
		{
			this.OnRenderSeparator(e);
			ToolStripSeparatorRenderEventHandler toolStripSeparatorRenderEventHandler = this.Events[ToolStripRenderer.EventRenderSeparator] as ToolStripSeparatorRenderEventHandler;
			if (toolStripSeparatorRenderEventHandler != null)
			{
				toolStripSeparatorRenderEventHandler(this, e);
			}
		}

		/// <summary>Draws the background of the <see cref="T:System.Windows.Forms.ToolStripPanel" />.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripPanelRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x06004639 RID: 17977 RVA: 0x00127510 File Offset: 0x00125710
		public void DrawToolStripPanelBackground(ToolStripPanelRenderEventArgs e)
		{
			this.OnRenderToolStripPanelBackground(e);
			ToolStripPanelRenderEventHandler toolStripPanelRenderEventHandler = this.Events[ToolStripRenderer.EventRenderToolStripPanelBackground] as ToolStripPanelRenderEventHandler;
			if (toolStripPanelRenderEventHandler != null)
			{
				toolStripPanelRenderEventHandler(this, e);
			}
		}

		/// <summary>Draws the background of the <see cref="T:System.Windows.Forms.ToolStripContentPanel" />.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripContentPanelRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x0600463A RID: 17978 RVA: 0x00127548 File Offset: 0x00125748
		public void DrawToolStripContentPanelBackground(ToolStripContentPanelRenderEventArgs e)
		{
			this.OnRenderToolStripContentPanelBackground(e);
			ToolStripContentPanelRenderEventHandler toolStripContentPanelRenderEventHandler = this.Events[ToolStripRenderer.EventRenderToolStripContentPanelBackground] as ToolStripContentPanelRenderEventHandler;
			if (toolStripContentPanelRenderEventHandler != null)
			{
				toolStripContentPanelRenderEventHandler(this, e);
			}
		}

		// Token: 0x0600463B RID: 17979 RVA: 0x00015C90 File Offset: 0x00013E90
		internal virtual Region GetTransparentRegion(ToolStrip toolStrip)
		{
			return null;
		}

		/// <summary>When overridden in a derived class, provides for custom initialization of the given <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
		/// <param name="toolStrip">The <see cref="T:System.Windows.Forms.ToolStrip" /> to be initialized.</param>
		// Token: 0x0600463C RID: 17980 RVA: 0x000070A6 File Offset: 0x000052A6
		protected internal virtual void Initialize(ToolStrip toolStrip)
		{
		}

		/// <summary>Initializes the specified <see cref="T:System.Windows.Forms.ToolStripPanel" />.</summary>
		/// <param name="toolStripPanel">The <see cref="T:System.Windows.Forms.ToolStripPanel" />.</param>
		// Token: 0x0600463D RID: 17981 RVA: 0x000070A6 File Offset: 0x000052A6
		protected internal virtual void InitializePanel(ToolStripPanel toolStripPanel)
		{
		}

		/// <summary>Initializes the specified <see cref="T:System.Windows.Forms.ToolStripContentPanel" />.</summary>
		/// <param name="contentPanel">The <see cref="T:System.Windows.Forms.ToolStripContentPanel" />.</param>
		// Token: 0x0600463E RID: 17982 RVA: 0x000070A6 File Offset: 0x000052A6
		protected internal virtual void InitializeContentPanel(ToolStripContentPanel contentPanel)
		{
		}

		/// <summary>When overridden in a derived class, provides for custom initialization of the given <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
		/// <param name="item">The <see cref="T:System.Windows.Forms.ToolStripItem" /> to be initialized.</param>
		// Token: 0x0600463F RID: 17983 RVA: 0x000070A6 File Offset: 0x000052A6
		protected internal virtual void InitializeItem(ToolStripItem item)
		{
		}

		/// <summary>Applies the <see cref="F:System.Windows.Forms.ToolStripRenderer.Offset2X" /> and <see cref="F:System.Windows.Forms.ToolStripRenderer.Offset2Y" /> values to scaling the arrow icon, if scaling is required based on the DPI settings of the computer.</summary>
		// Token: 0x06004640 RID: 17984 RVA: 0x00127580 File Offset: 0x00125780
		protected static void ScaleArrowOffsetsIfNeeded()
		{
			if (ToolStripRenderer.isScalingInitialized)
			{
				return;
			}
			if (DpiHelper.IsScalingRequired)
			{
				ToolStripRenderer.Offset2X = DpiHelper.LogicalToDeviceUnitsX(ToolStripRenderer.OFFSET_2PIXELS);
				ToolStripRenderer.Offset2Y = DpiHelper.LogicalToDeviceUnitsY(ToolStripRenderer.OFFSET_2PIXELS);
				ToolStripRenderer.offset4X = DpiHelper.LogicalToDeviceUnitsX(ToolStripRenderer.OFFSET_4PIXELS);
				ToolStripRenderer.offset4Y = DpiHelper.LogicalToDeviceUnitsY(ToolStripRenderer.OFFSET_4PIXELS);
			}
			ToolStripRenderer.isScalingInitialized = true;
		}

		/// <summary>Applies the <see cref="F:System.Windows.Forms.ToolStripRenderer.Offset2X" /> and <see cref="F:System.Windows.Forms.ToolStripRenderer.Offset2Y" /> values to scaling the arrow icon based on the specified DPI value.</summary>
		/// <param name="dpi">The DPI value to use for scaling.</param>
		// Token: 0x06004641 RID: 17985 RVA: 0x001275E0 File Offset: 0x001257E0
		protected static void ScaleArrowOffsetsIfNeeded(int dpi)
		{
			ToolStripRenderer.Offset2X = DpiHelper.LogicalToDeviceUnits(ToolStripRenderer.OFFSET_2PIXELS, dpi);
			ToolStripRenderer.Offset2Y = DpiHelper.LogicalToDeviceUnits(ToolStripRenderer.OFFSET_2PIXELS, dpi);
			ToolStripRenderer.offset4X = DpiHelper.LogicalToDeviceUnits(ToolStripRenderer.OFFSET_4PIXELS, dpi);
			ToolStripRenderer.offset4Y = DpiHelper.LogicalToDeviceUnits(ToolStripRenderer.OFFSET_4PIXELS, dpi);
		}

		/// <summary>Raises the <see cref="E:System.Windows.Forms.ToolStripRenderer.RenderArrow" /> event.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripArrowRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x06004642 RID: 17986 RVA: 0x00127630 File Offset: 0x00125830
		protected virtual void OnRenderArrow(ToolStripArrowRenderEventArgs e)
		{
			if (this.RendererOverride != null)
			{
				this.RendererOverride.OnRenderArrow(e);
				return;
			}
			Graphics graphics = e.Graphics;
			Rectangle arrowRectangle = e.ArrowRectangle;
			using (Brush brush = new SolidBrush(e.ArrowColor))
			{
				Point point = new Point(arrowRectangle.Left + arrowRectangle.Width / 2, arrowRectangle.Top + arrowRectangle.Height / 2);
				ToolStripItem item = e.Item;
				int? num = ((item != null) ? new int?(item.DeviceDpi) : null);
				int num2 = this.previousDeviceDpi;
				if (!((num.GetValueOrDefault() == num2) & (num != null)) && DpiHelper.EnableToolStripPerMonitorV2HighDpiImprovements)
				{
					this.previousDeviceDpi = e.Item.DeviceDpi;
					ToolStripRenderer.ScaleArrowOffsetsIfNeeded(e.Item.DeviceDpi);
				}
				else
				{
					ToolStripRenderer.ScaleArrowOffsetsIfNeeded();
				}
				int num3 = (DpiHelper.EnableToolStripHighDpiImprovements ? (ToolStripRenderer.offset4X - ToolStripRenderer.Offset2X) : ToolStripRenderer.Offset2X);
				ArrowDirection direction = e.Direction;
				Point[] array;
				if (direction <= ArrowDirection.Up)
				{
					if (direction == ArrowDirection.Left)
					{
						array = new Point[]
						{
							new Point(point.X + ToolStripRenderer.Offset2X, point.Y - ToolStripRenderer.offset4Y),
							new Point(point.X + ToolStripRenderer.Offset2X, point.Y + ToolStripRenderer.offset4Y),
							new Point(point.X - num3, point.Y)
						};
						goto IL_2E3;
					}
					if (direction == ArrowDirection.Up)
					{
						array = new Point[]
						{
							new Point(point.X - ToolStripRenderer.Offset2X, point.Y + 1),
							new Point(point.X + ToolStripRenderer.Offset2X + 1, point.Y + 1),
							new Point(point.X, point.Y - ToolStripRenderer.Offset2Y)
						};
						goto IL_2E3;
					}
				}
				else
				{
					if (direction == ArrowDirection.Right)
					{
						array = new Point[]
						{
							new Point(point.X - ToolStripRenderer.Offset2X, point.Y - ToolStripRenderer.offset4Y),
							new Point(point.X - ToolStripRenderer.Offset2X, point.Y + ToolStripRenderer.offset4Y),
							new Point(point.X + num3, point.Y)
						};
						goto IL_2E3;
					}
					if (direction != ArrowDirection.Down)
					{
					}
				}
				array = new Point[]
				{
					new Point(point.X - ToolStripRenderer.Offset2X, point.Y - 1),
					new Point(point.X + ToolStripRenderer.Offset2X + 1, point.Y - 1),
					new Point(point.X, point.Y + ToolStripRenderer.Offset2Y)
				};
				IL_2E3:
				graphics.FillPolygon(brush, array);
			}
		}

		/// <summary>Raises the <see cref="E:System.Windows.Forms.ToolStripRenderer.RenderToolStripBackground" /> event.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x06004643 RID: 17987 RVA: 0x00127954 File Offset: 0x00125B54
		protected virtual void OnRenderToolStripBackground(ToolStripRenderEventArgs e)
		{
			if (this.RendererOverride != null)
			{
				this.RendererOverride.OnRenderToolStripBackground(e);
				return;
			}
		}

		/// <summary>Raises the <see cref="E:System.Windows.Forms.ToolStripRenderer.RenderToolStripBorder" /> event.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x06004644 RID: 17988 RVA: 0x0012796B File Offset: 0x00125B6B
		protected virtual void OnRenderToolStripBorder(ToolStripRenderEventArgs e)
		{
			if (this.RendererOverride != null)
			{
				this.RendererOverride.OnRenderToolStripBorder(e);
				return;
			}
		}

		/// <summary>Raises the <see cref="E:System.Windows.Forms.ToolStripRenderer.RenderGrip" /> event.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripGripRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x06004645 RID: 17989 RVA: 0x00127982 File Offset: 0x00125B82
		protected virtual void OnRenderGrip(ToolStripGripRenderEventArgs e)
		{
			if (this.RendererOverride != null)
			{
				this.RendererOverride.OnRenderGrip(e);
				return;
			}
		}

		/// <summary>Raises the <see cref="M:System.Windows.Forms.ToolStripSystemRenderer.OnRenderItemBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)" /> event.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x06004646 RID: 17990 RVA: 0x00127999 File Offset: 0x00125B99
		protected virtual void OnRenderItemBackground(ToolStripItemRenderEventArgs e)
		{
			if (this.RendererOverride != null)
			{
				this.RendererOverride.OnRenderItemBackground(e);
				return;
			}
		}

		/// <summary>Draws the item background.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x06004647 RID: 17991 RVA: 0x001279B0 File Offset: 0x00125BB0
		protected virtual void OnRenderImageMargin(ToolStripRenderEventArgs e)
		{
			if (this.RendererOverride != null)
			{
				this.RendererOverride.OnRenderImageMargin(e);
				return;
			}
		}

		/// <summary>Raises the <see cref="E:System.Windows.Forms.ToolStripRenderer.RenderButtonBackground" /> event.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x06004648 RID: 17992 RVA: 0x001279C7 File Offset: 0x00125BC7
		protected virtual void OnRenderButtonBackground(ToolStripItemRenderEventArgs e)
		{
			if (this.RendererOverride != null)
			{
				this.RendererOverride.OnRenderButtonBackground(e);
				return;
			}
		}

		/// <summary>Raises the <see cref="E:System.Windows.Forms.ToolStripRenderer.RenderDropDownButtonBackground" /> event.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x06004649 RID: 17993 RVA: 0x001279DE File Offset: 0x00125BDE
		protected virtual void OnRenderDropDownButtonBackground(ToolStripItemRenderEventArgs e)
		{
			if (this.RendererOverride != null)
			{
				this.RendererOverride.OnRenderDropDownButtonBackground(e);
				return;
			}
		}

		/// <summary>Raises the <see cref="E:System.Windows.Forms.ToolStripRenderer.RenderOverflowButtonBackground" /> event.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x0600464A RID: 17994 RVA: 0x001279F5 File Offset: 0x00125BF5
		protected virtual void OnRenderOverflowButtonBackground(ToolStripItemRenderEventArgs e)
		{
			if (this.RendererOverride != null)
			{
				this.RendererOverride.OnRenderOverflowButtonBackground(e);
				return;
			}
		}

		/// <summary>Raises the <see cref="E:System.Windows.Forms.ToolStripRenderer.RenderItemImage" /> event.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemImageRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x0600464B RID: 17995 RVA: 0x00127A0C File Offset: 0x00125C0C
		protected virtual void OnRenderItemImage(ToolStripItemImageRenderEventArgs e)
		{
			if (this.RendererOverride != null)
			{
				this.RendererOverride.OnRenderItemImage(e);
				return;
			}
			Rectangle imageRectangle = e.ImageRectangle;
			Image image = e.Image;
			if (imageRectangle != Rectangle.Empty && image != null)
			{
				bool flag = false;
				if (e.ShiftOnPress && e.Item.Pressed)
				{
					imageRectangle.X++;
				}
				if (!e.Item.Enabled)
				{
					image = ToolStripRenderer.CreateDisabledImage(image, e.ImageAttributes);
					flag = true;
				}
				if (e.Item.ImageScaling == ToolStripItemImageScaling.None)
				{
					e.Graphics.DrawImage(image, imageRectangle, new Rectangle(Point.Empty, imageRectangle.Size), GraphicsUnit.Pixel);
				}
				else
				{
					e.Graphics.DrawImage(image, imageRectangle);
				}
				if (flag)
				{
					image.Dispose();
				}
			}
		}

		/// <summary>Raises the <see cref="E:System.Windows.Forms.ToolStripRenderer.RenderItemCheck" /> event.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemImageRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x0600464C RID: 17996 RVA: 0x00127AD8 File Offset: 0x00125CD8
		protected virtual void OnRenderItemCheck(ToolStripItemImageRenderEventArgs e)
		{
			if (this.RendererOverride != null)
			{
				this.RendererOverride.OnRenderItemCheck(e);
				return;
			}
			Rectangle imageRectangle = e.ImageRectangle;
			Image image = e.Image;
			if (imageRectangle != Rectangle.Empty && image != null)
			{
				if (!e.Item.Enabled)
				{
					image = ToolStripRenderer.CreateDisabledImage(image, e.ImageAttributes);
				}
				e.Graphics.DrawImage(image, imageRectangle, 0, 0, imageRectangle.Width, imageRectangle.Height, GraphicsUnit.Pixel, e.ImageAttributes);
			}
		}

		/// <summary>Raises the <see cref="E:System.Windows.Forms.ToolStripRenderer.RenderItemText" /> event.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemTextRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x0600464D RID: 17997 RVA: 0x00127B58 File Offset: 0x00125D58
		protected virtual void OnRenderItemText(ToolStripItemTextRenderEventArgs e)
		{
			if (this.RendererOverride != null)
			{
				this.RendererOverride.OnRenderItemText(e);
				return;
			}
			ToolStripItem item = e.Item;
			Graphics graphics = e.Graphics;
			Color color = e.TextColor;
			Font textFont = e.TextFont;
			string text = e.Text;
			Rectangle textRectangle = e.TextRectangle;
			TextFormatFlags textFormat = e.TextFormat;
			color = (item.Enabled ? color : SystemColors.GrayText);
			if (e.TextDirection != ToolStripTextDirection.Horizontal && textRectangle.Width > 0 && textRectangle.Height > 0)
			{
				Size size = LayoutUtils.FlipSize(textRectangle.Size);
				using (Bitmap bitmap = new Bitmap(size.Width, size.Height, PixelFormat.Format32bppPArgb))
				{
					using (Graphics graphics2 = Graphics.FromImage(bitmap))
					{
						graphics2.TextRenderingHint = TextRenderingHint.AntiAlias;
						TextRenderer.DrawText(graphics2, text, textFont, new Rectangle(Point.Empty, size), color, textFormat);
						bitmap.RotateFlip((e.TextDirection == ToolStripTextDirection.Vertical90) ? RotateFlipType.Rotate90FlipNone : RotateFlipType.Rotate270FlipNone);
						graphics.DrawImage(bitmap, textRectangle);
						return;
					}
				}
			}
			TextRenderer.DrawText(graphics, text, textFont, textRectangle, color, textFormat);
		}

		/// <summary>Raises the <see cref="E:System.Windows.Forms.ToolStripRenderer.RenderLabelBackground" /> event.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x0600464E RID: 17998 RVA: 0x00127C9C File Offset: 0x00125E9C
		protected virtual void OnRenderLabelBackground(ToolStripItemRenderEventArgs e)
		{
			if (this.RendererOverride != null)
			{
				this.RendererOverride.OnRenderLabelBackground(e);
				return;
			}
		}

		/// <summary>Raises the <see cref="E:System.Windows.Forms.ToolStripRenderer.RenderMenuItemBackground" /> event.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x0600464F RID: 17999 RVA: 0x00127CB3 File Offset: 0x00125EB3
		protected virtual void OnRenderMenuItemBackground(ToolStripItemRenderEventArgs e)
		{
			if (this.RendererOverride != null)
			{
				this.RendererOverride.OnRenderMenuItemBackground(e);
				return;
			}
		}

		/// <summary>Raises the <see cref="E:System.Windows.Forms.ToolStripRenderer.RenderSeparator" /> event.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripSeparatorRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x06004650 RID: 18000 RVA: 0x00127CCA File Offset: 0x00125ECA
		protected virtual void OnRenderSeparator(ToolStripSeparatorRenderEventArgs e)
		{
			if (this.RendererOverride != null)
			{
				this.RendererOverride.OnRenderSeparator(e);
				return;
			}
		}

		/// <summary>Raises the <see cref="E:System.Windows.Forms.ToolStripRenderer.RenderToolStripPanelBackground" /> event.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripPanelRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x06004651 RID: 18001 RVA: 0x00127CE1 File Offset: 0x00125EE1
		protected virtual void OnRenderToolStripPanelBackground(ToolStripPanelRenderEventArgs e)
		{
			if (this.RendererOverride != null)
			{
				this.RendererOverride.OnRenderToolStripPanelBackground(e);
				return;
			}
		}

		/// <summary>Raises the <see cref="E:System.Windows.Forms.ToolStripRenderer.RenderToolStripContentPanelBackground" /> event.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripContentPanelRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x06004652 RID: 18002 RVA: 0x00127CF8 File Offset: 0x00125EF8
		protected virtual void OnRenderToolStripContentPanelBackground(ToolStripContentPanelRenderEventArgs e)
		{
			if (this.RendererOverride != null)
			{
				this.RendererOverride.OnRenderToolStripContentPanelBackground(e);
				return;
			}
		}

		/// <summary>Raises the <see cref="E:System.Windows.Forms.ToolStripRenderer.RenderToolStripStatusLabelBackground" /> event.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x06004653 RID: 18003 RVA: 0x00127D0F File Offset: 0x00125F0F
		protected virtual void OnRenderToolStripStatusLabelBackground(ToolStripItemRenderEventArgs e)
		{
			if (this.RendererOverride != null)
			{
				this.RendererOverride.OnRenderToolStripStatusLabelBackground(e);
				return;
			}
		}

		/// <summary>Raises the <see cref="E:System.Windows.Forms.ToolStripRenderer.RenderStatusStripSizingGrip" /> event.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x06004654 RID: 18004 RVA: 0x00127D28 File Offset: 0x00125F28
		protected virtual void OnRenderStatusStripSizingGrip(ToolStripRenderEventArgs e)
		{
			if (this.RendererOverride != null)
			{
				this.RendererOverride.OnRenderStatusStripSizingGrip(e);
				return;
			}
			Graphics graphics = e.Graphics;
			StatusStrip statusStrip = e.ToolStrip as StatusStrip;
			if (statusStrip != null)
			{
				Rectangle sizeGripBounds = statusStrip.SizeGripBounds;
				if (!LayoutUtils.IsZeroWidthOrHeight(sizeGripBounds))
				{
					Rectangle[] array = new Rectangle[ToolStripRenderer.baseSizeGripRectangles.Length];
					Rectangle[] array2 = new Rectangle[ToolStripRenderer.baseSizeGripRectangles.Length];
					for (int i = 0; i < ToolStripRenderer.baseSizeGripRectangles.Length; i++)
					{
						Rectangle rectangle = ToolStripRenderer.baseSizeGripRectangles[i];
						if (statusStrip.RightToLeft == RightToLeft.Yes)
						{
							rectangle.X = sizeGripBounds.Width - rectangle.X - rectangle.Width;
						}
						rectangle.Offset(sizeGripBounds.X, sizeGripBounds.Bottom - 12);
						array[i] = rectangle;
						if (statusStrip.RightToLeft == RightToLeft.Yes)
						{
							rectangle.Offset(1, -1);
						}
						else
						{
							rectangle.Offset(-1, -1);
						}
						array2[i] = rectangle;
					}
					graphics.FillRectangles(SystemBrushes.ButtonHighlight, array);
					graphics.FillRectangles(SystemBrushes.ButtonShadow, array2);
				}
			}
		}

		/// <summary>Raises the <see cref="M:System.Windows.Forms.ToolStripRenderer.OnRenderSplitButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)" /> event.</summary>
		/// <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemRenderEventArgs" /> that contains the event data.</param>
		// Token: 0x06004655 RID: 18005 RVA: 0x00127E44 File Offset: 0x00126044
		protected virtual void OnRenderSplitButtonBackground(ToolStripItemRenderEventArgs e)
		{
			if (this.RendererOverride != null)
			{
				this.RendererOverride.OnRenderSplitButtonBackground(e);
				return;
			}
		}

		// Token: 0x06004656 RID: 18006 RVA: 0x00127E5B File Offset: 0x0012605B
		internal bool ShouldPaintBackground(Control control)
		{
			return control.RawBackColor == Color.Empty && control.BackgroundImage == null;
		}

		// Token: 0x06004657 RID: 18007 RVA: 0x00127E7C File Offset: 0x0012607C
		private static Image CreateDisabledImage(Image normalImage, ImageAttributes imgAttrib)
		{
			if (imgAttrib == null)
			{
				imgAttrib = new ImageAttributes();
			}
			imgAttrib.ClearColorKey();
			imgAttrib.SetColorMatrix(ToolStripRenderer.DisabledImageColorMatrix);
			Size size = normalImage.Size;
			Bitmap bitmap = new Bitmap(size.Width, size.Height);
			using (Graphics graphics = Graphics.FromImage(bitmap))
			{
				graphics.DrawImage(normalImage, new Rectangle(0, 0, size.Width, size.Height), 0, 0, size.Width, size.Height, GraphicsUnit.Pixel, imgAttrib);
			}
			return bitmap;
		}

		// Token: 0x04002675 RID: 9845
		private static readonly object EventRenderSplitButtonBackground = new object();

		// Token: 0x04002676 RID: 9846
		private static readonly object EventRenderItemBackground = new object();

		// Token: 0x04002677 RID: 9847
		private static readonly object EventRenderItemImage = new object();

		// Token: 0x04002678 RID: 9848
		private static readonly object EventRenderItemText = new object();

		// Token: 0x04002679 RID: 9849
		private static readonly object EventRenderToolStripBackground = new object();

		// Token: 0x0400267A RID: 9850
		private static readonly object EventRenderGrip = new object();

		// Token: 0x0400267B RID: 9851
		private static readonly object EventRenderButtonBackground = new object();

		// Token: 0x0400267C RID: 9852
		private static readonly object EventRenderLabelBackground = new object();

		// Token: 0x0400267D RID: 9853
		private static readonly object EventRenderMenuItemBackground = new object();

		// Token: 0x0400267E RID: 9854
		private static readonly object EventRenderDropDownButtonBackground = new object();

		// Token: 0x0400267F RID: 9855
		private static readonly object EventRenderOverflowButtonBackground = new object();

		// Token: 0x04002680 RID: 9856
		private static readonly object EventRenderImageMargin = new object();

		// Token: 0x04002681 RID: 9857
		private static readonly object EventRenderBorder = new object();

		// Token: 0x04002682 RID: 9858
		private static readonly object EventRenderArrow = new object();

		// Token: 0x04002683 RID: 9859
		private static readonly object EventRenderStatusStripPanelBackground = new object();

		// Token: 0x04002684 RID: 9860
		private static readonly object EventRenderToolStripStatusLabelBackground = new object();

		// Token: 0x04002685 RID: 9861
		private static readonly object EventRenderSeparator = new object();

		// Token: 0x04002686 RID: 9862
		private static readonly object EventRenderItemCheck = new object();

		// Token: 0x04002687 RID: 9863
		private static readonly object EventRenderToolStripPanelBackground = new object();

		// Token: 0x04002688 RID: 9864
		private static readonly object EventRenderToolStripContentPanelBackground = new object();

		// Token: 0x04002689 RID: 9865
		private static readonly object EventRenderStatusStripSizingGrip = new object();

		// Token: 0x0400268A RID: 9866
		private static ColorMatrix disabledImageColorMatrix;

		// Token: 0x0400268B RID: 9867
		private EventHandlerList events;

		// Token: 0x0400268C RID: 9868
		private bool isAutoGenerated;

		// Token: 0x0400268D RID: 9869
		private static bool isScalingInitialized = false;

		// Token: 0x0400268E RID: 9870
		internal int previousDeviceDpi = DpiHelper.DeviceDpi;

		// Token: 0x0400268F RID: 9871
		private static int OFFSET_2PIXELS = 2;

		// Token: 0x04002690 RID: 9872
		private static int OFFSET_4PIXELS = 4;

		/// <summary>Gets or sets the offset multiplier for twice the offset along the x-axis.</summary>
		// Token: 0x04002691 RID: 9873
		protected static int Offset2X = ToolStripRenderer.OFFSET_2PIXELS;

		/// <summary>Gets or sets the offset multiplier for twice the offset along the y axis.</summary>
		// Token: 0x04002692 RID: 9874
		protected static int Offset2Y = ToolStripRenderer.OFFSET_2PIXELS;

		// Token: 0x04002693 RID: 9875
		private static int offset4X = ToolStripRenderer.OFFSET_4PIXELS;

		// Token: 0x04002694 RID: 9876
		private static int offset4Y = ToolStripRenderer.OFFSET_4PIXELS;

		// Token: 0x04002695 RID: 9877
		private static Rectangle[] baseSizeGripRectangles = new Rectangle[]
		{
			new Rectangle(8, 0, 2, 2),
			new Rectangle(8, 4, 2, 2),
			new Rectangle(8, 8, 2, 2),
			new Rectangle(4, 4, 2, 2),
			new Rectangle(4, 8, 2, 2),
			new Rectangle(0, 8, 2, 2)
		};
	}
}
